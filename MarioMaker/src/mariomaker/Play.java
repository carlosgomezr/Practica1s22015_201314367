/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mariomaker;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.paint.Color;
import static javafx.scene.paint.Color.SLATEBLUE;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import java.awt.Container;
import java.awt.event.KeyEvent;
import javax.swing.JLabel;
/**
 *
 * @author Carlos Gomez
 */
public class Play extends javax.swing.JFrame {

    /**
     * Creates new form Play
     */
      Hilo h = new Hilo();
      minutos m = new minutos();
      int pausa=0;
      Raiz matriz= Make.matriz;
      int tamfila = Make.tamfila;
      int tamcolumna = Make.tamcolumna;
      private JPanel jPanel0;
      private JScrollPane scroll;
      public JLabel mario;
    public Play() {
         
       // this.getContentPane().setBackground(new java.awt.Color(95,124,244));
        jPanel0 = new JPanel();
        jPanel0.setBackground(new java.awt.Color(95,124,244));
        jPanel0.setBounds(20,175,1000,410);
        add(jPanel0);
        scroll = new JScrollPane(jPanel0);
      //scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        scroll.setBounds(20,175,1000,410);
        add(scroll);
 

        System.out.println("tamaño columna: "+tamcolumna);
        System.out.println("tamaño fila: "+tamfila);
        for(int x=0;x<tamcolumna;x++){
            for(int y=0;y<tamfila;y++){
                Portada nuevo = new Portada();
                int posx= x*50;
                int posy= 340-y*50;
                nuevo.crearPlay(jPanel0, posx, posy, x, y, matriz);
                System.out.println("setbounds  x: "+posx+" y: "+posy);
            }
        }
        Portada n = new Portada();
        mario = n.mario;
        initComponents();
      
        h.start();
        m.start();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, -1, -1));

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, -1, -1));

        jButton2.setText("PAUSA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 610, -1, -1));

        jMenu1.setText("Graficar");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Graficar Matriz");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    pausa = pausa+1;
    if((pausa % 2)!=0){
      h.interrupt();
      m.interrupt();
     
    }
    else{
        h.resume();
        m.resume();
        
        
    }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

       matriz.columna.graphMatriz(matriz.fila.ultimo, matriz.columna.ultimo);   
       Funcion fun = new Funcion();
       fun.generar("Matriz Ortogonal Play");

// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_RIGHT){
        mario.setLocation(mario.getX()+50, mario.getY());
    }    
    if(evt.getKeyCode()==KeyEvent.VK_LEFT){
        mario.setLocation(mario.getX()-50, mario.getY());
    }    
    

// TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Play().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables

int contador1=-1;
 private class Hilo extends Thread{
    //private int contador=0;
    
    public void run(){
    while(true){
                try {
                    contador1=contador1+1;
                    
                    jLabel2.setText(Integer.toString(contador1));
                    Thread.sleep(1000);
                    if (contador1==59){
                    contador1=0;
                    }
          
                } catch (InterruptedException ex) {
                    Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
                }
              
    }
    }
    }
 int contador2=-1;
 private class minutos extends Thread{
    //private int contador=-1;
    
    public void run(){
    while(true){
                try {
                    
                    contador2=contador2+1;
                    
                    jLabel1.setText(Integer.toString(contador2));
                    Thread.sleep(59000);
                    if (contador2==59){
                    contador2=0;
                    }
          
                } catch (InterruptedException ex) {
                    Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
                }
              
    }
    }
    }
}
